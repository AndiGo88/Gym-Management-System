# Gym Member Class
class GymMember:
    def __init__(self, member_id, name, membership_type, status='Active'):
        self.member_id = member_id
        self.name = name
        self.membership_type = membership_type
        self.status = status

    def display_info(self):
        print(f"Member ID: {self.member_id}")
        print(f"Name: {self.name}")
        print(f"Membership Type: {self.membership_type}")
        print(f"Status: {self.status}\n")


# Gym Management System Class
class GymManagementSystem:
    def __init__(self):
        self.members = {}

    def add_member(self, member_id, name, membership_type):
        if member_id in self.members:
            print(f"Member with ID {member_id} already exists.")
        else:
            new_member = GymMember(member_id, name, membership_type)
            self.members[member_id] = new_member
            print(f"New member {name} added.\n")

    def view_member(self, member_id):
        if member_id in self.members:
            self.members[member_id].display_info()
        else:
            print(f"No member found with ID {member_id}.\n")

    def update_status(self, member_id, status):
        if member_id in self.members:
            self.members[member_id].status = status
            print(f"Member ID {member_id}'s status updated to {status}.\n")
        else:
            print(f"No member found with ID {member_id}.\n")

    def list_members(self):
        if not self.members:
            print("No members found.")
        else:
            print("Listing all members:\n")
            for member in self.members.values():
                member.display_info()


# Main Program
if __name__ == "__main__":
    gym_system = GymManagementSystem()

    # Adding members
    gym_system.add_member(1, "Alice", "Gold")
    gym_system.add_member(2, "Bob", "Silver")

    # Viewing a specific member
    gym_system.view_member(1)

    # Listing all members
    gym_system.list_members()

    # Updating member status
    gym_system.update_status(1, "Inactive")

    # Viewing the updated member
    gym_system.view_member(1)
